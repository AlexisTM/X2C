// This file was generated by createLibraryBuilder.sce on 03-03-2017 01:17

funcprot(0);
jimport at.lcm.x2c.utils.Utils;
msvc = findmsvccompiler();
if(msvc ~= "unknown") then 
    bOK = configure_msvc();
end
if ~haveacompiler() then
    mprintf("Building Math library for x64 system skipped (no compiler found).\n");
    [compileCompFDone] = return(%f)
end

X2C_ROOT = jinvoke(jinvoke(Utils, "getRootDirectory"), "toString");
X2C_LIB_PATH = get_absolute_file_path("builder_x64.sce");
X2C_LIB_PATH = dirname(X2C_LIB_PATH);

// delete "is-compiled" marker
mdelete("Library_is_compiled_for_x64.txt");

names = [ "x2c_Abs_FiP8_C" "x2c_Abs_FiP16_C" "x2c_Abs_FiP32_C" "x2c_Abs_Float32_C" "x2c_Abs_Float64_C" "x2c_Add_FiP8_C" "x2c_Add_FiP16_C" "x2c_Add_FiP32_C" "x2c_Add_Float32_C" "x2c_Add_Float64_C" "x2c_Atan2_FiP8_C" "x2c_Atan2_FiP16_C" "x2c_Atan2_FiP32_C" "x2c_Atan2_Float32_C" "x2c_Atan2_Float64_C" "x2c_Average_FiP8_C" "x2c_Average_FiP16_C" "x2c_Average_FiP32_C" "x2c_Average_Float32_C" "x2c_Average_Float64_C" "x2c_Cos_FiP8_C" "x2c_Cos_FiP16_C" "x2c_Cos_FiP32_C" "x2c_Cos_Float32_C" "x2c_Cos_Float64_C" "x2c_Div_FiP8_C" "x2c_Div_FiP16_C" "x2c_Div_FiP32_C" "x2c_Div_Float32_C" "x2c_Div_Float64_C" "x2c_Exp_FiP8_C" "x2c_Exp_FiP16_C" "x2c_Exp_FiP32_C" "x2c_L2Norm_FiP8_C" "x2c_L2Norm_FiP16_C" "x2c_L2Norm_FiP32_C" "x2c_L2Norm_Float32_C" "x2c_L2Norm_Float64_C" "x2c_Mult_FiP8_C" "x2c_Mult_FiP16_C" "x2c_Mult_FiP32_C" "x2c_Mult_Float32_C" "x2c_Mult_Float64_C" "x2c_Negation_FiP8_C" "x2c_Negation_FiP16_C" "x2c_Negation_FiP32_C" "x2c_Negation_Float32_C" "x2c_Negation_Float64_C" "x2c_Sign_FiP8_C" "x2c_Sign_FiP16_C" "x2c_Sign_FiP32_C" "x2c_Sin_FiP8_C" "x2c_Sin_FiP16_C" "x2c_Sin_FiP32_C" "x2c_Sin_Float32_C" "x2c_Sin_Float64_C" "x2c_Sqrt_FiP8_C" "x2c_Sqrt_FiP16_C" "x2c_Sqrt_FiP32_C" "x2c_Sqrt_Float32_C" "x2c_Sqrt_Float64_C" "x2c_Sub_FiP8_C" "x2c_Sub_FiP16_C" "x2c_Sub_FiP32_C" "x2c_Sub_Float32_C" "x2c_Sub_Float64_C" "x2c_Sum_FiP8_C" "x2c_Sum_FiP16_C" "x2c_Sum_FiP32_C" "x2c_Sum_Float32_C" "x2c_Sum_Float64_C" "x2c_uAdd_FiP8_C" "x2c_uAdd_FiP16_C" "x2c_uAdd_FiP32_C" "x2c_uAdd_Float32_C" "x2c_uAdd_Float64_C" "x2c_uSub_FiP8_C" "x2c_uSub_FiP16_C" "x2c_uSub_FiP32_C" "x2c_uSub_Float32_C" "x2c_uSub_Float64_C"];
files = ["x2c_Utils.c" "x2c_Abs_FiP8_C.c" "x2c_Abs_FiP16_C.c" "x2c_Abs_FiP32_C.c" "x2c_Abs_Float32_C.c" "x2c_Abs_Float64_C.c" "x2c_Add_FiP8_C.c" "x2c_Add_FiP16_C.c" "x2c_Add_FiP32_C.c" "x2c_Add_Float32_C.c" "x2c_Add_Float64_C.c" "x2c_Atan2_FiP8_C.c" "x2c_Atan2_FiP16_C.c" "x2c_Atan2_FiP32_C.c" "x2c_Atan2_Float32_C.c" "x2c_Atan2_Float64_C.c" "x2c_Average_FiP8_C.c" "x2c_Average_FiP16_C.c" "x2c_Average_FiP32_C.c" "x2c_Average_Float32_C.c" "x2c_Average_Float64_C.c" "x2c_Cos_FiP8_C.c" "x2c_Cos_FiP16_C.c" "x2c_Cos_FiP32_C.c" "x2c_Cos_Float32_C.c" "x2c_Cos_Float64_C.c" "x2c_Div_FiP8_C.c" "x2c_Div_FiP16_C.c" "x2c_Div_FiP32_C.c" "x2c_Div_Float32_C.c" "x2c_Div_Float64_C.c" "x2c_Exp_FiP8_C.c" "x2c_Exp_FiP16_C.c" "x2c_Exp_FiP32_C.c" "x2c_L2Norm_FiP8_C.c" "x2c_L2Norm_FiP16_C.c" "x2c_L2Norm_FiP32_C.c" "x2c_L2Norm_Float32_C.c" "x2c_L2Norm_Float64_C.c" "x2c_Mult_FiP8_C.c" "x2c_Mult_FiP16_C.c" "x2c_Mult_FiP32_C.c" "x2c_Mult_Float32_C.c" "x2c_Mult_Float64_C.c" "x2c_Negation_FiP8_C.c" "x2c_Negation_FiP16_C.c" "x2c_Negation_FiP32_C.c" "x2c_Negation_Float32_C.c" "x2c_Negation_Float64_C.c" "x2c_Sign_FiP8_C.c" "x2c_Sign_FiP16_C.c" "x2c_Sign_FiP32_C.c" "x2c_Sin_FiP8_C.c" "x2c_Sin_FiP16_C.c" "x2c_Sin_FiP32_C.c" "x2c_Sin_Float32_C.c" "x2c_Sin_Float64_C.c" "x2c_Sqrt_FiP8_C.c" "x2c_Sqrt_FiP16_C.c" "x2c_Sqrt_FiP32_C.c" "x2c_Sqrt_Float32_C.c" "x2c_Sqrt_Float64_C.c" "x2c_Sub_FiP8_C.c" "x2c_Sub_FiP16_C.c" "x2c_Sub_FiP32_C.c" "x2c_Sub_Float32_C.c" "x2c_Sub_Float64_C.c" "x2c_Sum_FiP8_C.c" "x2c_Sum_FiP16_C.c" "x2c_Sum_FiP32_C.c" "x2c_Sum_Float32_C.c" "x2c_Sum_Float64_C.c" "x2c_uAdd_FiP8_C.c" "x2c_uAdd_FiP16_C.c" "x2c_uAdd_FiP32_C.c" "x2c_uAdd_Float32_C.c" "x2c_uAdd_Float64_C.c" "x2c_uSub_FiP8_C.c" "x2c_uSub_FiP16_C.c" "x2c_uSub_FiP32_C.c" "x2c_uSub_Float32_C.c" "x2c_uSub_Float64_C.c"];
flag = "c";
loadername = "loader_x64.sce";
libname = "Math_x64";
ldflags = SCI + "\bin\scicos.lib";
cflags = "-I" + SCI + "\modules\scicos_blocks\includes" + " -I" + SCI + "\modules\scicos\includes" + " -I" + X2C_ROOT + "\Controller\Common" + " -I" + X2C_LIB_PATH + "\Controller\src" + " -I" + X2C_LIB_PATH + "\Controller\inc";
ilib_for_link(names, files, [], flag, "", loadername, libname, ldflags, cflags);

// delete temporary files
if isdir("Debug") then
  rmdir("Debug","s");
end
if isdir("Release") then
  rmdir("Release","s");
end
mdelete("cleaner.sce")
mdelete("Makelib.mak")

// create "is-compiled" marker
currentTime=clock();
save("Library_is_compiled_for_x64.txt", "currentTime");

mprintf("Library Math for x64 system built.\n");
