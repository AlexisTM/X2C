// This file was generated by createLibraryStarter.sce on 03-03-2017 01:17

mprintf("+++ Loading X2C library General\n");
funcprot(0);
jimport("at.lcm.x2c.utils.Utils");
X2CRootDir = jinvoke(jinvoke(Utils, "getRootDirectory"), "toString");
X2CRootDir = strsubst(X2CRootDir, "\", "/");
curDir = strsubst(pwd(), "\", "/");
fs = filesep();

// load interface functions
exec("x2c_Xor.sci", -1);
exec("x2c_uSaveSignal.sci", -1);
exec("x2c_uRateLimiter.sci", -1);
exec("x2c_uGain.sci", -1);
exec("x2c_uConstant.sci", -1);
exec("x2c_TypeConv.sci", -1);
exec("x2c_SinGen.sci", -1);
exec("x2c_Sin3Gen.sci", -1);
exec("x2c_Sin2Limiter.sci", -1);
exec("x2c_Sequencer.sci", -1);
exec("x2c_Selector.sci", -1);
exec("x2c_SaveSignal.sci", -1);
exec("x2c_Saturation.sci", -1);
exec("x2c_Real2I.sci", -1);
exec("x2c_RateLimiter.sci", -1);
exec("x2c_Outport.sci", -1);
exec("x2c_Or.sci", -1);
exec("x2c_Not.sci", -1);
exec("x2c_MinMaxPeriod.sci", -1);
exec("x2c_Minimum.sci", -1);
exec("x2c_Maximum.sci", -1);
exec("x2c_ManualSwitch.sci", -1);
exec("x2c_LoopBreaker.sci", -1);
exec("x2c_LookupTable.sci", -1);
exec("x2c_Limitation.sci", -1);
exec("x2c_Int2Re.sci", -1);
exec("x2c_Inport.sci", -1);
exec("x2c_Gain.sci", -1);
exec("x2c_Constant.sci", -1);
exec("x2c_AutoSwitch.sci", -1);
exec("x2c_And.sci", -1);

// load/create palette for library
if isfile("General.xpal")
    // palette already exists -> load saved palette
    xcosPalAdd("General.xpal", "X2C");
else
    
    // load blocks and build palette
    pal = xcosPal("General");
    allIconsAvailable = %t;
    
    // And
    mprintf("Loading block And...")
    o = x2c_And("define");
    pal_icon = X2CRootDir + "Library" + fs + "General" + fs + "Doc" + fs + "Icons" + fs + "And" + ".png";
    if ~isfile(pal_icon)
        pal_icon = [];
        allIconsAvailable = %f;
    end
    style = struct();
    style.rounded = %f; // rectangular block with sharp edges
    style.fillColor = "#61BDFC" // light blue;
    style.gradientColor = "#61BDFC" // light blue;
// ++ BlockGenerator: Style
style.image = "file:///" + X2CRootDir + "Library/General/Doc/Images/Dummy.svg"
// -- BlockGenerator: Style
    pal = xcosPalAddBlock(pal, o, pal_icon, style);
    clear("o");
    mprintf("done\n");
    
    // AutoSwitch
    mprintf("Loading block AutoSwitch...")
    o = x2c_AutoSwitch("define");
    pal_icon = X2CRootDir + "Library" + fs + "General" + fs + "Doc" + fs + "Icons" + fs + "AutoSwitch" + ".png";
    if ~isfile(pal_icon)
        pal_icon = [];
        allIconsAvailable = %f;
    end
    style = struct();
    style.rounded = %f; // rectangular block with sharp edges
    style.fillColor = "#61BDFC" // light blue;
    style.gradientColor = "#61BDFC" // light blue;
// ++ BlockGenerator: Style
style.image = "file:///" + strsubst(pwd(), "\", "/") + "/../Doc/Images/AutoSwitch.svg";
// -- BlockGenerator: Style
    pal = xcosPalAddBlock(pal, o, pal_icon, style);
    clear("o");
    mprintf("done\n");
    
    // Constant
    mprintf("Loading block Constant...")
    o = x2c_Constant("define");
    pal_icon = X2CRootDir + "Library" + fs + "General" + fs + "Doc" + fs + "Icons" + fs + "Constant" + ".png";
    if ~isfile(pal_icon)
        pal_icon = [];
        allIconsAvailable = %f;
    end
    style = struct();
    style.rounded = %f; // rectangular block with sharp edges
    style.fillColor = "#61BDFC" // light blue;
    style.gradientColor = "#61BDFC" // light blue;
// ++ BlockGenerator: Style
style.image = "file:///" + X2CRootDir + "Library/General/Doc/Images/Dummy.svg"
// -- BlockGenerator: Style
    pal = xcosPalAddBlock(pal, o, pal_icon, style);
    clear("o");
    mprintf("done\n");
    
    // Gain
    mprintf("Loading block Gain...")
    o = x2c_Gain("define");
    pal_icon = X2CRootDir + "Library" + fs + "General" + fs + "Doc" + fs + "Icons" + fs + "Gain" + ".png";
    if ~isfile(pal_icon)
        pal_icon = [];
        allIconsAvailable = %f;
    end
    style = struct();
    style.rounded = %f; // rectangular block with sharp edges
    style.fillColor = "#61BDFC" // light blue;
    style.gradientColor = "#61BDFC" // light blue;
// ++ BlockGenerator: Style
style.image = "file:///" + curDir + "/../Doc/Images/Dummy.svg"
// -- BlockGenerator: Style
    pal = xcosPalAddBlock(pal, o, pal_icon, style);
    clear("o");
    mprintf("done\n");
    
    // Inport
    mprintf("Loading block Inport...")
    o = x2c_Inport("define");
    style = struct();
    style.opacity = 0;
    style.image="file:///" + X2CRootDir + "/Library/General/Doc/Images/Inport.svg"
    pal_icon = X2CRootDir + "Library" + fs + "General" + fs + "Doc" + fs + "Icons" + fs + "Inport" + ".png";
    if ~isfile(pal_icon)
        pal_icon = [];
        allIconsAvailable = %f;
    end
    pal = xcosPalAddBlock(pal, o, pal_icon, style);
    clear("o");
    mprintf("done\n");
    
    // Int2Real
    mprintf("Loading block Int2Real...")
    o = x2c_Int2Re("define");
    pal_icon = X2CRootDir + "Library" + fs + "General" + fs + "Doc" + fs + "Icons" + fs + "Int2Real" + ".png";
    if ~isfile(pal_icon)
        pal_icon = [];
        allIconsAvailable = %f;
    end
    style = struct();
    style.rounded = %f; // rectangular block with sharp edges
    style.fillColor = "#61BDFC" // light blue;
    style.gradientColor = "#61BDFC" // light blue;
// ++ BlockGenerator: Style
style.image = "file:///" + curDir + "/../Doc/Images/Dummy.svg"
// -- BlockGenerator: Style
    pal = xcosPalAddBlock(pal, o, pal_icon, style);
    clear("o");
    mprintf("done\n");
    
    // Limitation
    mprintf("Loading block Limitation...")
    o = x2c_Limitation("define");
    pal_icon = X2CRootDir + "Library" + fs + "General" + fs + "Doc" + fs + "Icons" + fs + "Limitation" + ".png";
    if ~isfile(pal_icon)
        pal_icon = [];
        allIconsAvailable = %f;
    end
    style = struct();
    style.rounded = %f; // rectangular block with sharp edges
    style.fillColor = "#61BDFC" // light blue;
    style.gradientColor = "#61BDFC" // light blue;
// ++ BlockGenerator: Style
style.image = "file:///" + curDir + "/../Doc/Images/Limitation.svg";
// -- BlockGenerator: Style
    pal = xcosPalAddBlock(pal, o, pal_icon, style);
    clear("o");
    mprintf("done\n");
    
    // LookupTable
    mprintf("Loading block LookupTable...")
    o = x2c_LookupTable("define");
    pal_icon = X2CRootDir + "Library" + fs + "General" + fs + "Doc" + fs + "Icons" + fs + "LookupTable" + ".png";
    if ~isfile(pal_icon)
        pal_icon = [];
        allIconsAvailable = %f;
    end
    style = struct();
    style.rounded = %f; // rectangular block with sharp edges
    style.fillColor = "#61BDFC" // light blue;
    style.gradientColor = "#61BDFC" // light blue;
// ++ BlockGenerator: Style
style.image = "file:///" + curDir + "/../Doc/Images/LookupTable.svg"
// -- BlockGenerator: Style
    pal = xcosPalAddBlock(pal, o, pal_icon, style);
    clear("o");
    mprintf("done\n");
    
    // LoopBreaker
    mprintf("Loading block LoopBreaker...")
    o = x2c_LoopBreaker("define");
    pal_icon = X2CRootDir + "Library" + fs + "General" + fs + "Doc" + fs + "Icons" + fs + "LoopBreaker" + ".png";
    if ~isfile(pal_icon)
        pal_icon = [];
        allIconsAvailable = %f;
    end
    style = struct();
    style.rounded = %f; // rectangular block with sharp edges
    style.fillColor = "#61BDFC" // light blue;
    style.gradientColor = "#61BDFC" // light blue;
// ++ BlockGenerator: Style
style.image = "file:///" + curDir + "/../../General/Doc/Images/Dummy.svg"
// -- BlockGenerator: Style
    pal = xcosPalAddBlock(pal, o, pal_icon, style);
    clear("o");
    mprintf("done\n");
    
    // ManualSwitch
    mprintf("Loading block ManualSwitch...")
    o = x2c_ManualSwitch("define");
    pal_icon = X2CRootDir + "Library" + fs + "General" + fs + "Doc" + fs + "Icons" + fs + "ManualSwitch" + ".png";
    if ~isfile(pal_icon)
        pal_icon = [];
        allIconsAvailable = %f;
    end
    style = struct();
    style.rounded = %f; // rectangular block with sharp edges
    style.fillColor = "#61BDFC" // light blue;
    style.gradientColor = "#61BDFC" // light blue;
// ++ BlockGenerator: Style
// do not load image here (is done via interface function)
// -- BlockGenerator: Style
    pal = xcosPalAddBlock(pal, o, pal_icon, style);
    clear("o");
    mprintf("done\n");
    
    // Maximum
    mprintf("Loading block Maximum...")
    o = x2c_Maximum("define");
    pal_icon = X2CRootDir + "Library" + fs + "General" + fs + "Doc" + fs + "Icons" + fs + "Maximum" + ".png";
    if ~isfile(pal_icon)
        pal_icon = [];
        allIconsAvailable = %f;
    end
    style = struct();
    style.rounded = %f; // rectangular block with sharp edges
    style.fillColor = "#61BDFC" // light blue;
    style.gradientColor = "#61BDFC" // light blue;
// ++ BlockGenerator: Style
style.image = "file:///" + X2CRootDir + "Library/General/Doc/Images/Dummy.svg"
// -- BlockGenerator: Style
    pal = xcosPalAddBlock(pal, o, pal_icon, style);
    clear("o");
    mprintf("done\n");
    
    // Minimum
    mprintf("Loading block Minimum...")
    o = x2c_Minimum("define");
    pal_icon = X2CRootDir + "Library" + fs + "General" + fs + "Doc" + fs + "Icons" + fs + "Minimum" + ".png";
    if ~isfile(pal_icon)
        pal_icon = [];
        allIconsAvailable = %f;
    end
    style = struct();
    style.rounded = %f; // rectangular block with sharp edges
    style.fillColor = "#61BDFC" // light blue;
    style.gradientColor = "#61BDFC" // light blue;
// ++ BlockGenerator: Style
style.image = "file:///" + X2CRootDir + "Library/General/Doc/Images/Dummy.svg"
// -- BlockGenerator: Style
    pal = xcosPalAddBlock(pal, o, pal_icon, style);
    clear("o");
    mprintf("done\n");
    
    // MinMaxPeriodic
    mprintf("Loading block MinMaxPeriodic...")
    o = x2c_MinMaxPeriod("define");
    pal_icon = X2CRootDir + "Library" + fs + "General" + fs + "Doc" + fs + "Icons" + fs + "MinMaxPeriodic" + ".png";
    if ~isfile(pal_icon)
        pal_icon = [];
        allIconsAvailable = %f;
    end
    style = struct();
    style.rounded = %f; // rectangular block with sharp edges
    style.fillColor = "#61BDFC" // light blue;
    style.gradientColor = "#61BDFC" // light blue;
// ++ BlockGenerator: Style
style.image = "file:///" + X2CRootDir + "Library/General/Doc/Images/MinMaxPeriodic.svg"
// -- BlockGenerator: Style
    pal = xcosPalAddBlock(pal, o, pal_icon, style);
    clear("o");
    mprintf("done\n");
    
    // Not
    mprintf("Loading block Not...")
    o = x2c_Not("define");
    pal_icon = X2CRootDir + "Library" + fs + "General" + fs + "Doc" + fs + "Icons" + fs + "Not" + ".png";
    if ~isfile(pal_icon)
        pal_icon = [];
        allIconsAvailable = %f;
    end
    style = struct();
    style.rounded = %f; // rectangular block with sharp edges
    style.fillColor = "#61BDFC" // light blue;
    style.gradientColor = "#61BDFC" // light blue;
// ++ BlockGenerator: Style
style.image = "file:///" + X2CRootDir + "Library/General/Doc/Images/Dummy.svg"
// -- BlockGenerator: Style
    pal = xcosPalAddBlock(pal, o, pal_icon, style);
    clear("o");
    mprintf("done\n");
    
    // Or
    mprintf("Loading block Or...")
    o = x2c_Or("define");
    pal_icon = X2CRootDir + "Library" + fs + "General" + fs + "Doc" + fs + "Icons" + fs + "Or" + ".png";
    if ~isfile(pal_icon)
        pal_icon = [];
        allIconsAvailable = %f;
    end
    style = struct();
    style.rounded = %f; // rectangular block with sharp edges
    style.fillColor = "#61BDFC" // light blue;
    style.gradientColor = "#61BDFC" // light blue;
// ++ BlockGenerator: Style
style.image = "file:///" + X2CRootDir + "Library/General/Doc/Images/Dummy.svg"
// -- BlockGenerator: Style
    pal = xcosPalAddBlock(pal, o, pal_icon, style);
    clear("o");
    mprintf("done\n");
    
    // Outport
    mprintf("Loading block Outport...")
    o = x2c_Outport("define");
    style = struct();
    style.opacity = 0;
    style.image="file:///" + X2CRootDir + "/Library/General/Doc/Images/Outport.svg"
    pal_icon = X2CRootDir + "Library" + fs + "General" + fs + "Doc" + fs + "Icons" + fs + "Outport" + ".png";
    if ~isfile(pal_icon)
        pal_icon = [];
        allIconsAvailable = %f;
    end
    pal = xcosPalAddBlock(pal, o, pal_icon, style);
    clear("o");
    mprintf("done\n");
    
    // RateLimiter
    mprintf("Loading block RateLimiter...")
    o = x2c_RateLimiter("define");
    pal_icon = X2CRootDir + "Library" + fs + "General" + fs + "Doc" + fs + "Icons" + fs + "RateLimiter" + ".png";
    if ~isfile(pal_icon)
        pal_icon = [];
        allIconsAvailable = %f;
    end
    style = struct();
    style.rounded = %f; // rectangular block with sharp edges
    style.fillColor = "#61BDFC" // light blue;
    style.gradientColor = "#61BDFC" // light blue;
// ++ BlockGenerator: Style
style.image = "file:///" + curDir + "/../Doc/Images/RateLimiter.svg";
// -- BlockGenerator: Style
    pal = xcosPalAddBlock(pal, o, pal_icon, style);
    clear("o");
    mprintf("done\n");
    
    // Real2Int
    mprintf("Loading block Real2Int...")
    o = x2c_Real2I("define");
    pal_icon = X2CRootDir + "Library" + fs + "General" + fs + "Doc" + fs + "Icons" + fs + "Real2Int" + ".png";
    if ~isfile(pal_icon)
        pal_icon = [];
        allIconsAvailable = %f;
    end
    style = struct();
    style.rounded = %f; // rectangular block with sharp edges
    style.fillColor = "#61BDFC" // light blue;
    style.gradientColor = "#61BDFC" // light blue;
// ++ BlockGenerator: Style
style.image = "file:///" + curDir + "/../Doc/Images/Dummy.svg"
// -- BlockGenerator: Style
    pal = xcosPalAddBlock(pal, o, pal_icon, style);
    clear("o");
    mprintf("done\n");
    
    // Saturation
    mprintf("Loading block Saturation...")
    o = x2c_Saturation("define");
    pal_icon = X2CRootDir + "Library" + fs + "General" + fs + "Doc" + fs + "Icons" + fs + "Saturation" + ".png";
    if ~isfile(pal_icon)
        pal_icon = [];
        allIconsAvailable = %f;
    end
    style = struct();
    style.rounded = %f; // rectangular block with sharp edges
    style.fillColor = "#61BDFC" // light blue;
    style.gradientColor = "#61BDFC" // light blue;
// ++ BlockGenerator: Style
style.image = "file:///" + curDir + "/../Doc/Images/Saturation.svg"
// -- BlockGenerator: Style
    pal = xcosPalAddBlock(pal, o, pal_icon, style);
    clear("o");
    mprintf("done\n");
    
    // SaveSignal
    mprintf("Loading block SaveSignal...")
    o = x2c_SaveSignal("define");
    pal_icon = X2CRootDir + "Library" + fs + "General" + fs + "Doc" + fs + "Icons" + fs + "SaveSignal" + ".png";
    if ~isfile(pal_icon)
        pal_icon = [];
        allIconsAvailable = %f;
    end
    style = struct();
    style.rounded = %f; // rectangular block with sharp edges
    style.fillColor = "#61BDFC" // light blue;
    style.gradientColor = "#61BDFC" // light blue;
// ++ BlockGenerator: Style
style.image = "file:///" + curDir + "/../Doc/Images/SaveSignal.svg"
// -- BlockGenerator: Style
    pal = xcosPalAddBlock(pal, o, pal_icon, style);
    clear("o");
    mprintf("done\n");
    
    // Selector
    mprintf("Loading block Selector...")
    o = x2c_Selector("define");
    pal_icon = X2CRootDir + "Library" + fs + "General" + fs + "Doc" + fs + "Icons" + fs + "Selector" + ".png";
    if ~isfile(pal_icon)
        pal_icon = [];
        allIconsAvailable = %f;
    end
    style = struct();
    style.rounded = %f; // rectangular block with sharp edges
    style.fillColor = "#61BDFC" // light blue;
    style.gradientColor = "#61BDFC" // light blue;
// ++ BlockGenerator: Style
style.image = "file:///" + curDir + "/../Doc/Images/Selector.svg";
// -- BlockGenerator: Style
    pal = xcosPalAddBlock(pal, o, pal_icon, style);
    clear("o");
    mprintf("done\n");
    
    // Sequencer
    mprintf("Loading block Sequencer...")
    o = x2c_Sequencer("define");
    pal_icon = X2CRootDir + "Library" + fs + "General" + fs + "Doc" + fs + "Icons" + fs + "Sequencer" + ".png";
    if ~isfile(pal_icon)
        pal_icon = [];
        allIconsAvailable = %f;
    end
    style = struct();
    style.rounded = %f; // rectangular block with sharp edges
    style.fillColor = "#61BDFC" // light blue;
    style.gradientColor = "#61BDFC" // light blue;
// ++ BlockGenerator: Style
style.image = "file:///" + curDir + "/../Doc/Images/Sequencer.svg"
// -- BlockGenerator: Style
    pal = xcosPalAddBlock(pal, o, pal_icon, style);
    clear("o");
    mprintf("done\n");
    
    // Sin2Limiter
    mprintf("Loading block Sin2Limiter...")
    o = x2c_Sin2Limiter("define");
    pal_icon = X2CRootDir + "Library" + fs + "General" + fs + "Doc" + fs + "Icons" + fs + "Sin2Limiter" + ".png";
    if ~isfile(pal_icon)
        pal_icon = [];
        allIconsAvailable = %f;
    end
    style = struct();
    style.rounded = %f; // rectangular block with sharp edges
    style.fillColor = "#61BDFC" // light blue;
    style.gradientColor = "#61BDFC" // light blue;
// ++ BlockGenerator: Style
style.image = "file:///" + curDir + "/../Doc/Images/Sin2Limiter.svg"
// -- BlockGenerator: Style
    pal = xcosPalAddBlock(pal, o, pal_icon, style);
    clear("o");
    mprintf("done\n");
    
    // Sin3Gen
    mprintf("Loading block Sin3Gen...")
    o = x2c_Sin3Gen("define");
    pal_icon = X2CRootDir + "Library" + fs + "General" + fs + "Doc" + fs + "Icons" + fs + "Sin3Gen" + ".png";
    if ~isfile(pal_icon)
        pal_icon = [];
        allIconsAvailable = %f;
    end
    style = struct();
    style.rounded = %f; // rectangular block with sharp edges
    style.fillColor = "#61BDFC" // light blue;
    style.gradientColor = "#61BDFC" // light blue;
// ++ BlockGenerator: Style
style.image = "file:///" + strsubst(pwd(), "\", "/") + "/../Doc/Images/Sin3Gen.svg"
// -- BlockGenerator: Style
    pal = xcosPalAddBlock(pal, o, pal_icon, style);
    clear("o");
    mprintf("done\n");
    
    // SinGen
    mprintf("Loading block SinGen...")
    o = x2c_SinGen("define");
    pal_icon = X2CRootDir + "Library" + fs + "General" + fs + "Doc" + fs + "Icons" + fs + "SinGen" + ".png";
    if ~isfile(pal_icon)
        pal_icon = [];
        allIconsAvailable = %f;
    end
    style = struct();
    style.rounded = %f; // rectangular block with sharp edges
    style.fillColor = "#61BDFC" // light blue;
    style.gradientColor = "#61BDFC" // light blue;
// ++ BlockGenerator: Style
style.image = "file:///" + strsubst(pwd(), "\", "/") + "/../Doc/Images/SinGen.svg"
// -- BlockGenerator: Style
    pal = xcosPalAddBlock(pal, o, pal_icon, style);
    clear("o");
    mprintf("done\n");
    
    // TypeConv
    mprintf("Loading block TypeConv...")
    o = x2c_TypeConv("define");
    pal_icon = X2CRootDir + "Library" + fs + "General" + fs + "Doc" + fs + "Icons" + fs + "TypeConv" + ".png";
    if ~isfile(pal_icon)
        pal_icon = [];
        allIconsAvailable = %f;
    end
    style = struct();
    style.rounded = %f; // rectangular block with sharp edges
    style.fillColor = "#61BDFC" // light blue;
    style.gradientColor = "#61BDFC" // light blue;
// ++ BlockGenerator: Style
style.image = "file:///" + curDir + "/../Doc/Images/Dummy.svg"
// -- BlockGenerator: Style
    pal = xcosPalAddBlock(pal, o, pal_icon, style);
    clear("o");
    mprintf("done\n");
    
    // uConstant
    mprintf("Loading block uConstant...")
    o = x2c_uConstant("define");
    pal_icon = X2CRootDir + "Library" + fs + "General" + fs + "Doc" + fs + "Icons" + fs + "uConstant" + ".png";
    if ~isfile(pal_icon)
        pal_icon = [];
        allIconsAvailable = %f;
    end
    style = struct();
    style.rounded = %f; // rectangular block with sharp edges
    style.fillColor = "#61BDFC" // light blue;
    style.gradientColor = "#61BDFC" // light blue;
// ++ BlockGenerator: Style
style.fillColor="#E8D600";
style.gradientColor="#E8D600";
style.image = "file:///" + X2CRootDir + "Library/General/Doc/Images/Dummy.svg"
// -- BlockGenerator: Style
    pal = xcosPalAddBlock(pal, o, pal_icon, style);
    clear("o");
    mprintf("done\n");
    
    // uGain
    mprintf("Loading block uGain...")
    o = x2c_uGain("define");
    pal_icon = X2CRootDir + "Library" + fs + "General" + fs + "Doc" + fs + "Icons" + fs + "uGain" + ".png";
    if ~isfile(pal_icon)
        pal_icon = [];
        allIconsAvailable = %f;
    end
    style = struct();
    style.rounded = %f; // rectangular block with sharp edges
    style.fillColor = "#61BDFC" // light blue;
    style.gradientColor = "#61BDFC" // light blue;
// ++ BlockGenerator: Style
style.fillColor="#E8D600";
style.gradientColor="#E8D600";
style.image = "file:///" + curDir + "/../Doc/Images/Dummy.svg"
// -- BlockGenerator: Style
    pal = xcosPalAddBlock(pal, o, pal_icon, style);
    clear("o");
    mprintf("done\n");
    
    // uRateLimiter
    mprintf("Loading block uRateLimiter...")
    o = x2c_uRateLimiter("define");
    pal_icon = X2CRootDir + "Library" + fs + "General" + fs + "Doc" + fs + "Icons" + fs + "uRateLimiter" + ".png";
    if ~isfile(pal_icon)
        pal_icon = [];
        allIconsAvailable = %f;
    end
    style = struct();
    style.rounded = %f; // rectangular block with sharp edges
    style.fillColor = "#61BDFC" // light blue;
    style.gradientColor = "#61BDFC" // light blue;
// ++ BlockGenerator: Style
style.fillColor="#E8D600";
style.gradientColor="#E8D600";
style.image = "file:///" + curDir + "/../Doc/Images/RateLimiter.svg";
// -- BlockGenerator: Style
    pal = xcosPalAddBlock(pal, o, pal_icon, style);
    clear("o");
    mprintf("done\n");
    
    // uSaveSignal
    mprintf("Loading block uSaveSignal...")
    o = x2c_uSaveSignal("define");
    pal_icon = X2CRootDir + "Library" + fs + "General" + fs + "Doc" + fs + "Icons" + fs + "uSaveSignal" + ".png";
    if ~isfile(pal_icon)
        pal_icon = [];
        allIconsAvailable = %f;
    end
    style = struct();
    style.rounded = %f; // rectangular block with sharp edges
    style.fillColor = "#61BDFC" // light blue;
    style.gradientColor = "#61BDFC" // light blue;
// ++ BlockGenerator: Style
style.fillColor="#E8D600";
style.gradientColor="#E8D600";
style.image = "file:///" + curDir + "/../Doc/Images/SaveSignal.svg"
// -- BlockGenerator: Style
    pal = xcosPalAddBlock(pal, o, pal_icon, style);
    clear("o");
    mprintf("done\n");
    
    // Xor
    mprintf("Loading block Xor...")
    o = x2c_Xor("define");
    pal_icon = X2CRootDir + "Library" + fs + "General" + fs + "Doc" + fs + "Icons" + fs + "Xor" + ".png";
    if ~isfile(pal_icon)
        pal_icon = [];
        allIconsAvailable = %f;
    end
    style = struct();
    style.rounded = %f; // rectangular block with sharp edges
    style.fillColor = "#61BDFC" // light blue;
    style.gradientColor = "#61BDFC" // light blue;
// ++ BlockGenerator: Style
style.image = "file:///" + X2CRootDir + "Library/General/Doc/Images/Dummy.svg"
// -- BlockGenerator: Style
    pal = xcosPalAddBlock(pal, o, pal_icon, style);
    clear("o");
    mprintf("done\n");
    
    

    // load palette
    xcosPalAdd(pal, "X2C");
    
    if allIconsAvailable then
        // save palette
        xcosPalExport(pal, "General.xpal");
    end
    
    // cleanup
    clear("pal")
    clear("pal_icon")
    clear("style")
    
end

mprintf("---\n");
